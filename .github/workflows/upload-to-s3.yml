name: upload_to_s3
on:
#   workflow_call:
#     secrets: 
#       AWS_ACCESS_KEY_ID:
#       AWS_SECRET_ACCESS_KEY:
#       #ASSUME_ROLE_ARN:
#        required: true
  push:
    branches:
      - main
jobs:

  Build_NLA_Artifacts:
    uses: ./.github/workflows/build.yml
  upload:
    runs-on: ubuntu-latest
    needs: Build_NLA_Artifacts
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure all files are checked out

      - name: Set up jq
        run: sudo apt-get install jq  

      - name: Ensure Workspace Directory Exists
        run: |
          mkdir -p ${{ github.workspace }}/build_artifacts
          echo "Workspace directory created or already exists."

      - name: Download containment_alerts from Build Artifacts
        uses: actions/download-artifact@v4
        with:
          
          path: ${{ github.workspace }}/build_artifacts
  

      - name: List Downloaded Files
        run: |
          echo "Listing contents of build_artifacts:"
          ls -R ${{ github.workspace }}/build_artifacts  

      - name: Debug AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
        run: |
          echo "Checking AWS credentials..."
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
          echo "AWS_ACCESS_KEY_ID is not set!"
          exit 1
          fi
          if [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
          echo "AWS_SECRET_ACCESS_KEY is not set!"
          exit 1
          fi
          aws sts get-caller-identity --region $AWS_REGION

      - name: s3 upload
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # export AWS_ACCOUNT=${{ secrets.AWS_ACCOUNT }}
          # export ENVIRONMENT=${{ secrets.ENVIRONMENT }}
          export AWS_DEFAULT_REGION="us-west-2"
          OUTPUT_PROFILE="AWSCLI-AssumeRole"
        
          echo "Assuming AWS role..."
          #ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn "arn:aws:iam::442426866507:role/fondo/sdge-dcctr-dev-iam-role-tfc" --role-session-name "GitHubSession" --output json) || exit 1
          ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn "arn:aws:iam::183095018968:role/fondo/sdge-dtdes-dev-iam-role-ado" --role-session-name "$OUTPUT_PROFILE" --output json)    
          ACCESS_KEY=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.AccessKeyId')
          SECRET_KEY=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.SecretAccessKey')
          SESSION_TOKEN=$(echo "$ASSUME_ROLE_OUTPUT" | jq -r '.Credentials.SessionToken')

          if [[ -z "$ACCESS_KEY" || -z "$SECRET_KEY" || -z "$SESSION_TOKEN" ]]; then
          echo "Failed to assume role. Exiting."
          exit 1
          fi

          export AWS_ACCESS_KEY_ID=$ACCESS_KEY
          export AWS_SECRET_ACCESS_KEY=$SECRET_KEY
          export AWS_SESSION_TOKEN=$SESSION_TOKEN

          echo "Role assumed successfully"    
      - name: Upload Artifacts to S3
        run: |
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_audit_call_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_comprehend_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_informational_macie_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_macie_scan_trigger_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_notification_forwarder_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_transcribe_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_audio_copy.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_audio_access_logs_to_cw.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_access_denied_notification_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/ccc_file_transfer_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2
          aws s3 cp  ${{ github.workspace }}/build_artifacts/key_rotation_alert_lambda.zip s3://socal-dtdes-dev-wus2-s3-tf-artifacts-testingbucket/ --region us-west-2     