name: upload_to_s3
on:
  workflow_call:
    secrets: 
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      #ASSUME_ROLE_ARN:
       required: true
  # push:
  #   branches:
  #     - master
  # pull_request:
  #   branches:
  #     - dev
  #     - qa
jobs:

  
  
  set-environment:
  
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.setenv.outputs.environment }}
    steps:
      - name: Set environment variable
        id: setenv
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "environment=dev" >> $GITHUB_ENV
            echo "::set-output name=environment::dev"
          elif [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
            echo "environment=qa" >> $GITHUB_ENV
            echo "::set-output name=environment::qa"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_ENV
            echo "::set-output name=environment::prod"
          fi
  
  upload:
    runs-on: ubuntu-latest
    needs: [ set-environment ]
    environment: ${{ needs.set-environment.outputs.environment }}
    
    steps:  
      - name: Checkout code
        uses: actions/checkout@v2 
        with:
          fetch-depth: 0

      - name: Set up jq
        run: sudo apt-get install -y jq  

      - name: Ensure Workspace Directory Exists
        run: mkdir -p ${{ github.workspace }}/build_artifacts

      - name: Download All Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: nla-artifacts
          path: ${{ github.workspace }}/build_artifacts

      - name: List Downloaded Files
        run: ls -R ${{ github.workspace }}/build_artifacts  

      - name: Debug AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
        run: |
          aws sts get-caller-identity --region $AWS_REGION

      - name: Upload Lambda ZIPs to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          AWS_DEFAULT_REGION: us-west-2
        run: |
          #ROLE_ARN="arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/fondo/sdge-dtdes-${{ secrets.ENVIRONMENT }}-iam-role-ado"
          ROLE_ARN="arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/sdge-dcctr-${{ secrets.ENVIRONMENT }}-iam-role-ado"
          OUTPUT_PROFILE="AWSCLI-AssumeRole"

          echo "Assuming role..."
          CREDS=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "$OUTPUT_PROFILE" --output json)
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

          echo "Uploading to S3..."
          for file in ${{ github.workspace }}/build_artifacts/*.zip; do
            fname=$(basename $file)
            aws s3 cp "$file" "s3://socal-dtdes-${{ secrets.ENVIRONMENT }}-wus2-s3-tf-artifacts=testingbucket/pipeline-artifact/$fname" --region us-west-2
          done