# .github/workflows/lambda-deployment.yml
name: Lambda Deployment

on:
  workflow_call:  # Enables this workflow to be called from another workflow
    inputs:
      environment:
        description: "Target Environment"
        required: true
        type: string
    


      awsRegionCode: 
        description: 'Deployment Environment'
        required: true
        type: string
        default: "us-west-2"
      awsRegionAbbreviation: 
        description: 'Deployment Environment'
        required: true
        type: string
        default: "wus2"
      s3ArtifactBucketSuffix: 
        required: true
        type: string
        default: "s3-tf-artifacts"
      s3ArtifactBucketFolder: 
        required: true
        type: string
        default: "pipeline-artifact"
      s3LambdaObjectKey1: 
        required: true
        type: string
        default: "ccc_audit_call_lambda.zip"
      lambdaFunctionName1: 
        required: true
        type: string
        default: "lambda-audit-call"

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to AWS Lambda
        #run: echo "Deploying Lambda to ${{ inputs.environment }}"
        run: echo "Deploying Lambda to dev"
 
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-west-2 # Change if needed  
      - name: Set up AWS CLI
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
          echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

      - name: Set up AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2" # Change to your region
        run: |
          echo "Configuring AWS credentials..."
          aws sts get-caller-identity --region us-west-2

      - name: Assume Role
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2" # Change to your region
        run: |
          echo "Assuming role..."
          ROLE_ARN="arn:aws:iam::891612551190:role/sdge-dcctr-dev-iam-role-ado" # Replace with your role ARN
          RESPONSE=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name "GitHubActionsSession")
          AWS_ACCESS_KEY_ID=$(echo $RESPONSE | jq -r '.Credentials.AccessKeyId')
          AWS_SECRET_ACCESS_KEY=$(echo $RESPONSE | jq -r '.Credentials.SecretAccessKey')
          AWS_SESSION_TOKEN=$(echo $RESPONSE | jq -r '.Credentials.SessionToken')
          export AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY
          export AWS_SESSION_TOKEN
          echo "Role assumed successfully."

      - name: Deploy Lambda Function 1
        env:
          organization: socal
          applicationcode: dmeti
        run: |
          echo "Configuring AWS credentials..."
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID}}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" 
           
          export AWS_DEFAULT_REGION="us-west-2"
          OUTPUT_PROFILE="AWSCLI-AssumeRole"
        
          echo "Assuming role..."
          ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn "arn:aws:iam::891612551190:role/sdge-dcctr-dev-iam-role-ado" --role-session-name "$OUTPUT_PROFILE" --output json)
        
       
          aws lambda create-function \
            --function-name "${{ env.organization }}-${{env.applicationCode }}-${{ inputs.environment }}-${{ inputs.awsRegionAbbreviation }}-lambdaFunctionName1" \
            --s3-bucket "${{ env.organization }}-${{ env.applicationCode }}-${{ inputs.environment }}-${{ inputs.awsRegionAbbreviation }}-${{ inputs.s3ArtifactBucketSuffix }}" \
            --s3-key "${{ inputs.s3ArtifactBucketFolder }}/lambdaFunctionName1.zip" \
            --region "${{ inputs.awsRegionCode }}"
      